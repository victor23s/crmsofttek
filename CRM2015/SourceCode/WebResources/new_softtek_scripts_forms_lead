/// <reference path="XrmPageTemplate.js" />
/// <reference path="new_softtek_scripts_util_dynamicform.js" />
/// <reference path="JQuery.js" />
/// <reference path="Json2.js" />
/// <reference path="XrmServiceToolkit.js" />
var globalLeadTypeID;
var SQLSalesQualifiedStatus = 100000012;
var UQLUnqualifiedStatus = 100000011;
var MQLMarketingQualifiedStatus = 100000010;
var UnqualifiedAcct = false;

function initializeForm() {
    try{
    __formTypeUpdate = 1;
    Xrm.Page.Validations.AddTo("new_existingaccount").When("new_neworextacct").EqualsTo(false).Do().Hide();
    Xrm.Page.Validations.AddTo("new_existingaccount").When("new_neworextacct").DifferentTo(false).Do().Show();
    Xrm.Page.Validations.AddTo("companyname").When("new_neworextacct").EqualsTo(false).Do().Hide();
    Xrm.Page.Validations.AddTo("companyname").When("new_neworextacct").DifferentTo(true).Do().Show();

    Xrm.Page.Validations.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo(null).Or("new_marketscopelead").EqualsTo(null).Do().Disabled();
    Xrm.Page.Validations.AddTo("new_softtekvertical1").When("new_softtekmarketlead").DifferentTo(null).And("new_marketscopelead").DifferentTo(null).Do().Enabled();


    /* Cascade SofttekMarket = Cloud SAP Industry Solutions, any MarketScope, SofttekVertical = 
                            JIT Automotive Solutions, Pharmalab, ChemQ, eMetal, pCare, SAP Serivces*/
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000006").Do().PutOptions(["200000019", "200000020", "200000021", "200000022", "200000023", "200000024"]);
    /* Cascade SofttekMarket = USA & Canada & MarketScope = Global, SofttekVertical =
                            GE Capital,  GE Corporate, GE Energy, GE Manufacturing, ABInveb, Citi, Walmart, HP */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000000").And("new_marketscopelead").EqualsTo("100000000").Do().PutOptions(["100000026", "100000027", "100000028", "100000029", "100000030", "100000031", "100000033", "100000032"]);

    /* Cascade SofttekMarket =  USA & Canada & MarketScope = Non Global, SofttekVertical = 
                           Conglomerates, Healthcare, Financial Svcs & Ins, Middle Market, Retail&CPG, Strategic Accounts,
                           Comm, Media & Tech, General, Other, Unknown */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000000").And("new_marketscopelead").EqualsTo("100000001").Do().PutOptions(["100000043", "100000044", "100000000", "100000003", "100000040", "100000004", "100000010", "100000005", "100000007", "100000008"]);

    /* Cascade SofttekMarket = Mexico & Central America & MarketScope = Global, SofttekVertical = 
                            01 Banamex, 02 HP, 03 Walmart, 04 GE, 05 ABInveb */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000001").And("new_marketscopelead").EqualsTo("100000000").Do().PutOptions(["200000001", "200000002", "200000003", "200000000", "100000011"]);

    /* Cascade SofttekMarket = Mexico & Central America & MarketScope = Non Global, SofttekVertical =
                          06 EST Bancomer, 
                          08 HGM Bimbo, 
                          09 BC Retail y Servicios, 
                          11 BD Financiero,
                          12 BD Honeywell ,
                          13 ZN Named Occidente, 
                          14 Manufactura y Quimica, 
                          15 SAP, 
                          16 SP, 
                          18 Bajío
                          19 Consultoría Servicios
                          20 Energía y Telcos*/
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000001").And("new_marketscopelead").EqualsTo("100000001").Do().PutOptions(["100000012", "100000014", "100000045", "100000017", "100000019", "100000041", "100000042", "100000016", "100000018", "100000053", "100000054", "100000055"]);
    //***********************************************************
    /* Cascade SofttekMarket = HSA & MarketScope = Global, SofttekVertical =
                            GE Capital,  GE Corporate */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000003").And("new_marketscopelead").EqualsTo("100000000").Do().PutOptions(["100000026", "100000027", "100000028", "100000029", "100000030", "100000031", "100000032", "100000033"]);
    /* Cascade SofttekMarket = HSA & MarketScope =Non Global, SofttekVertical = Communications, Networks & Peripherals, USA & Canada & MarketScope = Non Global, SofttekVertical = 
                            Financial Services & Insurance, Manufacturing and Consumer Product, Middle Market, Retail, Strategic Accounts,
                            Technology & Media, General, Other, Unknown */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000003").And("new_marketscopelead").EqualsTo("100000001").Do().PutOptions(["100000046", "100000047", "100000048", "100000049", "100000050", "100000051", "100000052"]);

    /* Cascade SofttekMarket != Mexico & Central America, USA & Canada, Cloud SAP Industry Solutions, Softtek Vertical =
                             General */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").DifferentTo("100000006").And("new_softtekmarketlead").DifferentTo("100000000").And("new_softtekmarketlead").DifferentTo("100000001").And("new_softtekmarketlead").DifferentTo("100000003").Do().PutOptions(["100000005"]);
    //************************************************************
    /* Cascade SofttekMarket != Mexico & Central America, USA & Canada, Cloud SAP Industry Solutions, Softtek Vertical =
                            General */
    /* Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead")
     .DifferentTo("100000006").And("new_softtekmarketlead").DifferentTo("100000000").And("new_softtekmarketlead").DifferentTo("100000001")
     .Do().PutOptions(["100000005"]);*/
    /* Deprecate from Softtek Vertical :
                            05 EST-Bancomer [Deprecado], 06 EST-IBM Metlife [Deprecado], 07 HGM-Bimbo [Deprecado], 08 HGM-Named [Deprecado], 09 BD-Named [Deprecado],
                            10 BD-Financiero [Deprecado], 11 BD-Honeywell [Deprecado], 13 ZN-Urbi [Deprecado], 14 SAP [Deprecado], 15 SP [Deprecado] */
    Xrm.Page.Cascades.Deprecate("new_softtekvertical1", ["200000004", "200000005", "200000006", "200000011", "200000018", "200000014", "200000017", "200000016", "200000012", "200000015"]);

    /* Cascade SofttekMarket = Europe, MarketScope = Global, SofttekVertical = 
                          GE Capital, GE Corporate, GE Energy,  GE Infrastructure, ABInveb, Citi, Walmart, HP*/
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000005").And("new_marketscopelead").EqualsTo("100000000").Do().PutOptions(["100000026", "100000027", "100000028", "100000029", "100000030", "100000031", "100000032", "100000033"]);

    /* Cascade SofttekMarket = Europe, MarketScope = Non Global, SofttekVertical = 
                   Internacional, Nacional NovaGaliciaBanco, Nacional Madrid,   Nacional Galicia, Nacional Otros, SAP*/
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000005").And("new_marketscopelead").EqualsTo("100000001").Do().PutOptions(["100000034", "100000035", "100000036", "100000037", "100000038", "100000039"]);

    /* Deprecate from Status : 
                            Turned into an Opportunity, Qualified*/
    Xrm.Page.Cascades.Deprecate("statuscode", ["200005", "200006"]);
    /* Deprecate from : Service Offering : */
    Xrm.Page.Cascades.Deprecate("new_serviceoffering1", ["100000008"]);

    /*Cascade SofttekMarket = Brazil and Market Scope = Global, Softtek Vertical = 
    GE Capital
    GE Corporate
    GE Energy
    GE Manufacturing
    ABInveb
    Citi
    Walmart
    HP
    */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000002").And("new_marketscopelead").EqualsTo("100000000").Do().PutOptions(["100000026","100000027","100000028","100000029","100000030","100000031","100000032","100000033"]);

    /*Cascade SofttekMarket = China and Market Scope = Global, Softtek Vertical = 
    GE Capital
    GE Corporate
    GE Energy
    GE Manufacturing
    ABInveb
    Citi
    Walmart
    HP
    */
    Xrm.Page.Cascades.AddTo("new_softtekvertical1").When("new_softtekmarketlead").EqualsTo("100000004").And("new_marketscopelead").EqualsTo("100000000").Do().PutOptions(["100000026","100000027","100000028","100000029","100000030","100000031","100000032","100000033"]);

    Xrm.Page.Validations.AddTo("new_lead_contopp").When("new_lead_contopp").EqualsTo(true).Do().ExecuteCustomAction(function () {
        var DialogResult = confirm("Do you want to convert Lead in Contact & Opportunity?");
        if (DialogResult == false) {
            Xrm.Page.getAttribute("new_lead_contopp").setValue(false);
        }
    });

    Xrm.Page.Validations.AddTo("new_existingaccount").When("new_neworextacct").EqualsTo(false).Do().SetValue(null);
    Xrm.Page.Validations.AddTo("new_lead_contopp").When("new_neworextacct").EqualsTo(false).Do().SetValue(false);
    Xrm.Page.Validations.AddTo("companyname").When("new_neworextacct").DifferentTo(false).Do().SetValue(null);
    Xrm.Page.Validations.AddTo("companyname").When("companyname").EqualsTo("companyname").Do().SetSubmitModeAlways();
    Xrm.Page.Validations.AddTo("new_existingaccount").When("new_existingaccount").EqualsTo("companyname").Do().SetSubmitModeAlways();
    Xrm.Page.Validations.AddTo("new_lead_contopp").When("new_lead_contopp").EqualsTo("companyname").Do().SetSubmitModeAlways();

    Xrm.Page.Validations.AddTo("companyname").When("new_neworextacct").EqualsTo(false).Do().SetRequired();
    Xrm.Page.Validations.AddTo("companyname").When("new_neworextacct").EqualsTo(false).Do().Show();
    Xrm.Page.Validations.AddTo("new_existingaccount").When("new_neworextacct").EqualsTo(false).Do().SetUnRequired();

    Xrm.Page.Validations.AddTo("companyname").When("new_neworextacct").DifferentTo(false).Do().SetUnRequired();
    Xrm.Page.Validations.AddTo("new_existingaccount").When("new_neworextacct").DifferentTo(false).Do().SetRequired();

   if (Xrm.Page.getAttribute("new_softtekvertical1").getOptions()[0].text == "") {
        Xrm.Page.getAttribute("new_softtekvertical1").getOptions().shift();
    }

    /*
           Se agrego funcionalidad para que cuando el usuario seleccione la opcion unqualified Account dentro de la forma
           solo aparezca el campo correspondiente:
           Unqualified: unqualified Account (Textbox)
           Qualified: Qualified account (Lookup)
    */
    if (formType == __formTypeUpdate && (Xrm.Page.getAttribute("new_existingaccount").getValue() != null || Xrm.Page.getAttribute("companyname").getValue() != null || Xrm.Page.getAttribute("new_lead_contopp").getValue() == true)) {
        if (confirm("You are changing Unqualified (New) or Qualified (Existing) account Selection. All related information will be removed")) {
            Xrm.Page.getAttribute("new_existingaccount").setValue(null);
            Xrm.Page.getAttribute("companyname").setValue(null);
            Xrm.Page.getAttribute("new_lead_contopp").setValue(false);
        }
        else {
            Xrm.Page.getAttribute("new_neworextacct").setValue(!Xrm.Page.getAttribute("new_neworextacct").getValue());
            return;
        }
    }
    if (Xrm.Page.getAttribute("new_neworextacct").getValue() == false) {
        Xrm.Page.getControl("new_existingaccount").getParent().setVisible(false);
        Xrm.Page.getControl("companyname").getParent().setVisible(true);
    }
    else {
        Xrm.Page.getControl("new_existingaccount").getParent().setVisible(true);
        Xrm.Page.getControl("companyname").getParent().setVisible(false);
    }

    Xrm.Page.Validations.Validate("new_existingaccount");
    Xrm.Page.Validations.Validate("companyname");
    globalLeadTypeID = Xrm.Page.getAttribute("statuscode").getValue();
    }
    catch (err) {
        alert(" initializeForm " + err.toString());
    }
}

function onLoad() {     

    LeadQuery();
    initializeForm();
    LeadRequiredFields();
    var selectedSofttekVertical = Xrm.Page.getAttribute("new_softtekvertical1").getSelectedOption();
    Xrm.Page.Validations.Validate("new_existingaccount");
    Xrm.Page.Validations.Validate("companyname");
    Xrm.Page.Validations.Validate("new_softtekvertical1");
    Xrm.Page.Cascades.Filter("new_softtekvertical1");
    Xrm.Page.Cascades.Filter("statuscode");
    Xrm.Page.Cascades.Filter("new_serviceoffering1");
    Xrm.Page.Validations.Validate("new_existingaccount");
    if (selectedSofttekVertical != null) Xrm.Page.getAttribute("new_softtekvertical1").setValue(selectedSofttekVertical.value);
    var customerinyear = Xrm.Page.getAttribute("new_newcustomerinyear").getValue();
    var createdOn = Xrm.Page.getAttribute("createdon").getValue();
    if (customerinyear == null && createdOn == null) {
        var t = new Date();
        var yyyy = t.getFullYear();
        var opctions = Xrm.Page.getAttribute("new_newcustomerinyear").getOptions();
        var id = null;
        opctions.forEach(function (option) {
            //modificado por caro if (option.getText() == yyyy)
            if (option.text == yyyy) id = option.value;

        });
    }
    else {
        var yyyy = createdOn.getFullYear();
        var opctions = Xrm.Page.getAttribute("new_newcustomerinyear").getOptions();
        var id = null;
        opctions.forEach(function (option) {
            //modificado  por caro if (option.getText() == yyyy)
            if (option.text == yyyy) id = option.value;

        });
    }
    Xrm.Page.getAttribute("new_newcustomerinyear").setValue(id);
    Xrm.Page.getAttribute("new_newcustomerinyear").setSubmitMode("always");
        
}
function onSave() {
    Xrm.Page.Validations.Validate("new_lead_contopp");
    Xrm.Page.Validations.Validate("companyname");
    Xrm.Page.Validations.Validate("new_existingaccount");
}
function onChangeSofttekMarket() {
    Xrm.Page.getAttribute("new_softtekvertical1").setValue(null);
    Xrm.Page.Validations.Validate("new_softtekvertical1");
    Xrm.Page.Cascades.Filter("new_softtekvertical1");
}
function onChangeMarketScope() {
//debugger;
    Xrm.Page.getAttribute("new_softtekvertical1").setValue(null);
    Xrm.Page.Validations.Validate("new_softtekvertical1");
    Xrm.Page.Cascades.Filter("new_softtekvertical1");
}
function onChangeNewOrExistingAccount() {
    if (formType == __formTypeUpdate && (Xrm.Page.getAttribute("new_existingaccount").getValue() != null || Xrm.Page.getAttribute("companyname").getValue() != null || Xrm.Page.getAttribute("new_lead_contopp").getValue() == true)) {
        if (confirm("You are changing Unqualified (New) or Qualified (Existing) account Selection. All related information will be removed")) {
            Xrm.Page.getAttribute("new_existingaccount").setValue(null);
            Xrm.Page.getAttribute("companyname").setValue(null);
            Xrm.Page.getAttribute("new_lead_contopp").setValue(false);
        }
        else {
            Xrm.Page.getAttribute("new_neworextacct").setValue(!Xrm.Page.getAttribute("new_neworextacct").getValue());
            return;
        }
    }
    if (Xrm.Page.getAttribute("new_neworextacct").getValue() == false) {
        Xrm.Page.getControl("new_existingaccount").getParent().setVisible(false);
        Xrm.Page.getControl("companyname").getParent().setVisible(true);
    }
    else {
        Xrm.Page.getControl("new_existingaccount").getParent().setVisible(true);
        Xrm.Page.getControl("companyname").getParent().setVisible(false);
    }

    Xrm.Page.Validations.Validate("new_existingaccount");
    Xrm.Page.Validations.Validate("companyname");
}

function LeadRequiredFields() {
    MakeUnrequiredFields();

    //MQL - Marketing Qualified - 100000010
    if (Xrm.Page.getAttribute("statuscode").getValue() == MQLMarketingQualifiedStatus) {
        MQLRequiredFields();
    }

    // SQL - Sales Qualified - 100000012
    if (Xrm.Page.getAttribute("statuscode").getValue() == SQLSalesQualifiedStatus) {
        MQLRequiredFields();
        SQLRequiredFields();
    }
}

function SQLRequiredFields() {
    Xrm.Page.getAttribute("fullname").setRequiredLevel("required");
    Xrm.Page.getAttribute("firstname").setRequiredLevel("required");
    Xrm.Page.getAttribute("lastname").setRequiredLevel("required");
    Xrm.Page.getAttribute("emailaddress1").setRequiredLevel("required");
    Xrm.Page.getAttribute("jobtitle").setRequiredLevel("required");
    Xrm.Page.getAttribute("address2_city").setRequiredLevel("required");
    Xrm.Page.getAttribute("address2_stateorprovince").setRequiredLevel("required");
    Xrm.Page.getAttribute("address2_country").setRequiredLevel("required");
}

function MQLRequiredFields() {
    if (Xrm.Page.getAttribute("new_neworextacct").getValue() == UnqualifiedAcct) {
        Xrm.Page.getAttribute("telephone1").setRequiredLevel("required");
        Xrm.Page.getAttribute("address1_line1").setRequiredLevel("required");
        Xrm.Page.getAttribute("address1_city").setRequiredLevel("required");
        Xrm.Page.getAttribute("address1_stateorprovince").setRequiredLevel("required");
        Xrm.Page.getAttribute("address1_country").setRequiredLevel("required");
        Xrm.Page.getAttribute("new_noofemployeerange").setRequiredLevel("required");
        Xrm.Page.getAttribute("new_annualrevenuerange").setRequiredLevel("required");
    }
}

function MakeUnrequiredFields() {
    //SQL fields
    Xrm.Page.getAttribute("fullname").setRequiredLevel("none");
    Xrm.Page.getAttribute("firstname").setRequiredLevel("none");
    Xrm.Page.getAttribute("lastname").setRequiredLevel("none");
    Xrm.Page.getAttribute("emailaddress1").setRequiredLevel("none");
    Xrm.Page.getAttribute("jobtitle").setRequiredLevel("none");
    Xrm.Page.getAttribute("address2_city").setRequiredLevel("none");
    Xrm.Page.getAttribute("address2_stateorprovince").setRequiredLevel("none");
    Xrm.Page.getAttribute("address2_country").setRequiredLevel("none");

    //MQL fields
    Xrm.Page.getAttribute("telephone1").setRequiredLevel("none");
    Xrm.Page.getAttribute("address1_line1").setRequiredLevel("none");
    Xrm.Page.getAttribute("address1_city").setRequiredLevel("none");
    Xrm.Page.getAttribute("address1_stateorprovince").setRequiredLevel("none");
    Xrm.Page.getAttribute("address1_country").setRequiredLevel("none");
    Xrm.Page.getAttribute("new_noofemployeerange").setRequiredLevel("none");
    Xrm.Page.getAttribute("new_annualrevenuerange").setRequiredLevel("none");
}

function SetLeadTypeChangeDate() {
    var actualLeadTypeID = Xrm.Page.getAttribute("statuscode").getValue();
    if (globalLeadTypeID != actualLeadTypeID) {
        var today = new Date();
        if (actualLeadTypeID == MQLMarketingQualifiedStatus) {
            Xrm.Page.getAttribute("new_mqldate").setValue(today);
            Xrm.Page.getAttribute("new_mqldate").setSubmitMode("always");
        }
        else if (actualLeadTypeID == SQLSalesQualifiedStatus) {
            Xrm.Page.getAttribute("new_sqldate").setValue(today);
            Xrm.Page.getAttribute("new_sqldate").setSubmitMode("always");
        }
    }
}
/*EEGS Ticket 343455*/
function SetContactNamesRequired() {
    var noreacc = Xrm.Page.getAttribute("new_neworextacct").getValue();
    if (noreacc != false) {
        Xrm.Page.getAttribute("fullname").setRequiredLevel("none");
        Xrm.Page.getAttribute("firstname").setRequiredLevel("none");
        Xrm.Page.getAttribute("lastname").setRequiredLevel("none");
    }
    else {
        Xrm.Page.getAttribute("fullname").setRequiredLevel("required");
        Xrm.Page.getAttribute("firstname").setRequiredLevel("required");
        Xrm.Page.getAttribute("lastname").setRequiredLevel("required");
    }
}

function LeadQuery() {
    var LeadId = Xrm.Page.data.entity.getId();
    if (LeadId != "" || LeadId != '') {
        LeadId = LeadId.replace("{", "").replace("}", "");
        var item = null;
        XrmServiceToolkit.Rest.RetrieveMultiple("LeadSet", "$filter= LeadId eq guid'" + LeadId + "'", // "$select=*",//"$filter= SystemUserId eq guid'" + entityId + "'",
        function (results) {
            item = results;
        },
        // ReSharper disable once UnuentityIdsedParameter
        function (error) { },
        function onComplete() { },
        false);
    }
}
